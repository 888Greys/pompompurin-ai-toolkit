name: üçÆ PompomPurin AI Toolkit CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with ruff
      run: |
        ruff check .
        ruff format --check .
    
    - name: Type check with mypy
      run: |
        mypy task-api/app --ignore-missing-imports
    
    - name: Test Task API
      run: |
        cd task-api
        pytest tests/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./task-api/coverage.xml
        flags: unittests
        name: codecov-umbrella

  validate-prps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate PRP Structure
      run: |
        # Check that all PRPs have required sections
        for prp in PRPs/*.md; do
          if [[ -f "$prp" && "$prp" != *"README"* ]]; then
            echo "Validating $prp"
            grep -q "## Goal" "$prp" || (echo "Missing Goal section in $prp" && exit 1)
            grep -q "## Why" "$prp" || (echo "Missing Why section in $prp" && exit 1)
            grep -q "## What" "$prp" || (echo "Missing What section in $prp" && exit 1)
            grep -q "## All Needed Context" "$prp" || (echo "Missing Context section in $prp" && exit 1)
            grep -q "## Implementation Blueprint" "$prp" || (echo "Missing Implementation section in $prp" && exit 1)
            grep -q "## Validation Loop" "$prp" || (echo "Missing Validation section in $prp" && exit 1)
          fi
        done
        echo "‚úÖ All PRPs have required structure"

  demo-api:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        cd task-api
        pip install -r requirements.txt
    
    - name: Start API server
      run: |
        cd task-api
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
    
    - name: Test API endpoints
      run: |
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Test API documentation
        curl -f http://localhost:8000/docs || exit 1
        
        # Test user registration
        curl -X POST "http://localhost:8000/auth/register" \
             -H "Content-Type: application/json" \
             -d '{"email": "test@example.com", "password": "testpass123"}' || exit 1
        
        echo "‚úÖ Demo API is working correctly"